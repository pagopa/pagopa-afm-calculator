name: Update Code

on:
  pull_request:
    branches:
      - main
  issue_comment:

  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_formatting:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request }}
    steps:
      - name: Formatting
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--set-exit-if-changed"

      - uses: actions/github-script@v6.3.3
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var comments = await github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo
            });
            for (const comment of comments.data) {
              if (comment.body.includes('Comment this PR with')){
                github.rest.issues.deleteComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                })
              }
            }
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Comment this PR with */update_code* to update `openapi.json` and to format the code. Consider to use pre-commit.'
            })
  

  update:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains('/update_code' ,github.event.issue.comment.body) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Update OpenApi and Swagger files
        run: |
          cd ./openapi
          sh ./generate_openapi.sh

      - name: Formatting
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--replace"
          commit-message: "Google Java format [skip ci]"

      # prepare openapi template for infra repo
      - run: |
          mkdir -p "${GITHUB_WORKSPACE}/infra"
          jq  '."servers"[0]."url" |= "${host}"' "${GITHUB_WORKSPACE}/openapi/openapi.json" > "${GITHUB_WORKSPACE}/infra/_openapi.json.tpl"
          
          # open a PR on infra repo
      - name: Create pull request
        uses: jacopocarlini/action-pull-request-another-repo@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_folder: 'infra'
          destination_repo: 'pagopa/pagopa-infra'
          destination_folder: 'src/domains/afm-app/api/marketplace-service/utils'
          destination_base_branch: 'main'
          destination_head_branch: 'AFM-Utils-swagger-update'
          user_email: 'github-bot@pagopa.it'
          user_name: 'pagopa-github-bot'
          allow_force_push: 'true'

      # TODO terraform apply to update the new openapi.json

